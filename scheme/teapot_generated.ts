// automatically generated by the FlatBuffers compiler, do not modify

import { flatbuffers } from "flatbuffers";
/**
 * @enum {number}
 */
export namespace Teapot{
export enum Any{
  NONE= 0,
  Float= 1,
  Int= 2,
  Bool= 3,
  String= 4
}};

/**
 * @constructor
 */
export namespace Teapot{
export class Float {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Float
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Float {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
value():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number value
 * @returns flatbuffers.Offset
 */
static createFloat(builder:flatbuffers.Builder, value: number):flatbuffers.Offset {
  builder.prep(4, 4);
  builder.writeFloat32(value);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Teapot{
export class Int {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Int
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Int {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
value():number {
  return this.bb!.readInt32(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number value
 * @returns flatbuffers.Offset
 */
static createInt(builder:flatbuffers.Builder, value: number):flatbuffers.Offset {
  builder.prep(4, 4);
  builder.writeInt32(value);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Teapot{
export class Bool {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Bool
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Bool {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns boolean
 */
value():boolean {
  return !!this.bb!.readInt8(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean value
 * @returns flatbuffers.Offset
 */
static createBool(builder:flatbuffers.Builder, value: boolean):flatbuffers.Offset {
  builder.prep(1, 1);
  builder.writeInt8(+value);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Teapot{
export class String {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns String
 */
__init(i:number, bb:flatbuffers.ByteBuffer):String {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param String= obj
 * @returns String
 */
static getRootAsString(bb:flatbuffers.ByteBuffer, obj?:String):String {
  return (obj || new String).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startString(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endString(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createString(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset):flatbuffers.Offset {
  String.startString(builder);
  String.addValue(builder, valueOffset);
  return String.endString(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class Accessor {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Accessor
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Accessor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Accessor= obj
 * @returns Accessor
 */
static getRootAsAccessor(bb:flatbuffers.ByteBuffer, obj?:Accessor):Accessor {
  return (obj || new Accessor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param Teapot.Expression= obj
 * @returns Teapot.Expression|null
 */
expression(obj?:Teapot.Expression):Teapot.Expression|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Teapot.Expression).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAccessor(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset expressionOffset
 */
static addExpression(builder:flatbuffers.Builder, expressionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, expressionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAccessor(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createAccessor(builder:flatbuffers.Builder, type:number, expressionOffset:flatbuffers.Offset):flatbuffers.Offset {
  Accessor.startAccessor(builder);
  Accessor.addType(builder, type);
  Accessor.addExpression(builder, expressionOffset);
  return Accessor.endAccessor(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class TextPartition {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns TextPartition
 */
__init(i:number, bb:flatbuffers.ByteBuffer):TextPartition {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param TextPartition= obj
 * @returns TextPartition
 */
static getRootAsTextPartition(bb:flatbuffers.ByteBuffer, obj?:TextPartition):TextPartition {
  return (obj || new TextPartition).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param Teapot.Accessor= obj
 * @returns Teapot.Accessor|null
 */
valueAccessor(obj?:Teapot.Accessor):Teapot.Accessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Teapot.Accessor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
text():string|null
text(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
text(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startTextPartition(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueAccessorOffset
 */
static addValueAccessor(builder:flatbuffers.Builder, valueAccessorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, valueAccessorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset textOffset
 */
static addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, textOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endTextPartition(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createTextPartition(builder:flatbuffers.Builder, type:number, valueAccessorOffset:flatbuffers.Offset, textOffset:flatbuffers.Offset):flatbuffers.Offset {
  TextPartition.startTextPartition(builder);
  TextPartition.addType(builder, type);
  TextPartition.addValueAccessor(builder, valueAccessorOffset);
  TextPartition.addText(builder, textOffset);
  return TextPartition.endTextPartition(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class Attribute {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Attribute
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Attribute {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Attribute= obj
 * @returns Attribute
 */
static getRootAsAttribute(bb:flatbuffers.ByteBuffer, obj?:Attribute):Attribute {
  return (obj || new Attribute).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param number index
 * @param Teapot.TextPartition= obj
 * @returns Teapot.TextPartition
 */
value(index: number, obj?:Teapot.TextPartition):Teapot.TextPartition|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Teapot.TextPartition).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
valueLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAttribute(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createValueVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAttribute(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createAttribute(builder:flatbuffers.Builder, type:number, nameOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {
  Attribute.startAttribute(builder);
  Attribute.addType(builder, type);
  Attribute.addName(builder, nameOffset);
  Attribute.addValue(builder, valueOffset);
  return Attribute.endAttribute(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class Renderable {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Renderable
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Renderable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Renderable= obj
 * @returns Renderable
 */
static getRootAsRenderable(bb:flatbuffers.ByteBuffer, obj?:Renderable):Renderable {
  return (obj || new Renderable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Teapot.TextPartition= obj
 * @returns Teapot.TextPartition
 */
textPartitions(index: number, obj?:Teapot.TextPartition):Teapot.TextPartition|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Teapot.TextPartition).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
textPartitionsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param number index
 * @param Teapot.Renderable= obj
 * @returns Teapot.Renderable
 */
children(index: number, obj?:Teapot.Renderable):Teapot.Renderable|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Teapot.Renderable).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
childrenLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Teapot.Attribute= obj
 * @returns Teapot.Attribute
 */
attributes(index: number, obj?:Teapot.Attribute):Teapot.Attribute|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Teapot.Attribute).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
attributesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param Teapot.Renderable= obj
 * @returns Teapot.Renderable|null
 */
next(obj?:Teapot.Renderable):Teapot.Renderable|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Teapot.Renderable).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Teapot.Accessor= obj
 * @returns Teapot.Accessor|null
 */
condition(obj?:Teapot.Accessor):Teapot.Accessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Teapot.Accessor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Teapot.Accessor= obj
 * @returns Teapot.Accessor|null
 */
definition(obj?:Teapot.Accessor):Teapot.Accessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Teapot.Accessor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Teapot.Accessor= obj
 * @returns Teapot.Accessor|null
 */
increment(obj?:Teapot.Accessor):Teapot.Accessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new Teapot.Accessor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
definitionVariable():string|null
definitionVariable(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
definitionVariable(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
incrementVariable():string|null
incrementVariable(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
incrementVariable(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns boolean
 */
iterator():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param Teapot.Accessor= obj
 * @returns Teapot.Accessor|null
 */
iterable(obj?:Teapot.Accessor):Teapot.Accessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new Teapot.Accessor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
variable():string|null
variable(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
variable(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param Teapot.Accessor= obj
 * @returns Teapot.Accessor|null
 */
accessor(obj?:Teapot.Accessor):Teapot.Accessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new Teapot.Accessor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRenderable(builder:flatbuffers.Builder) {
  builder.startObject(15);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset textPartitionsOffset
 */
static addTextPartitions(builder:flatbuffers.Builder, textPartitionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, textPartitionsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createTextPartitionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startTextPartitionsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset childrenOffset
 */
static addChildren(builder:flatbuffers.Builder, childrenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, childrenOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createChildrenVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startChildrenVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset attributesOffset
 */
static addAttributes(builder:flatbuffers.Builder, attributesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, attributesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createAttributesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startAttributesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nextOffset
 */
static addNext(builder:flatbuffers.Builder, nextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, nextOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset conditionOffset
 */
static addCondition(builder:flatbuffers.Builder, conditionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, conditionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset definitionOffset
 */
static addDefinition(builder:flatbuffers.Builder, definitionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, definitionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset incrementOffset
 */
static addIncrement(builder:flatbuffers.Builder, incrementOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, incrementOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset definitionVariableOffset
 */
static addDefinitionVariable(builder:flatbuffers.Builder, definitionVariableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, definitionVariableOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset incrementVariableOffset
 */
static addIncrementVariable(builder:flatbuffers.Builder, incrementVariableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, incrementVariableOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean iterator
 */
static addIterator(builder:flatbuffers.Builder, iterator:boolean) {
  builder.addFieldInt8(11, +iterator, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset iterableOffset
 */
static addIterable(builder:flatbuffers.Builder, iterableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, iterableOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset variableOffset
 */
static addVariable(builder:flatbuffers.Builder, variableOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, variableOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset accessorOffset
 */
static addAccessor(builder:flatbuffers.Builder, accessorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, accessorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRenderable(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createRenderable(builder:flatbuffers.Builder, type:number, textPartitionsOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, childrenOffset:flatbuffers.Offset, attributesOffset:flatbuffers.Offset, nextOffset:flatbuffers.Offset, conditionOffset:flatbuffers.Offset, definitionOffset:flatbuffers.Offset, incrementOffset:flatbuffers.Offset, definitionVariableOffset:flatbuffers.Offset, incrementVariableOffset:flatbuffers.Offset, iterator:boolean, iterableOffset:flatbuffers.Offset, variableOffset:flatbuffers.Offset, accessorOffset:flatbuffers.Offset):flatbuffers.Offset {
  Renderable.startRenderable(builder);
  Renderable.addType(builder, type);
  Renderable.addTextPartitions(builder, textPartitionsOffset);
  Renderable.addName(builder, nameOffset);
  Renderable.addChildren(builder, childrenOffset);
  Renderable.addAttributes(builder, attributesOffset);
  Renderable.addNext(builder, nextOffset);
  Renderable.addCondition(builder, conditionOffset);
  Renderable.addDefinition(builder, definitionOffset);
  Renderable.addIncrement(builder, incrementOffset);
  Renderable.addDefinitionVariable(builder, definitionVariableOffset);
  Renderable.addIncrementVariable(builder, incrementVariableOffset);
  Renderable.addIterator(builder, iterator);
  Renderable.addIterable(builder, iterableOffset);
  Renderable.addVariable(builder, variableOffset);
  Renderable.addAccessor(builder, accessorOffset);
  return Renderable.endRenderable(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class FieldAccessor {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns FieldAccessor
 */
__init(i:number, bb:flatbuffers.ByteBuffer):FieldAccessor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FieldAccessor= obj
 * @returns FieldAccessor
 */
static getRootAsFieldAccessor(bb:flatbuffers.ByteBuffer, obj?:FieldAccessor):FieldAccessor {
  return (obj || new FieldAccessor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param Teapot.Expression= obj
 * @returns Teapot.Expression|null
 */
innerExpression(obj?:Teapot.Expression):Teapot.Expression|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Teapot.Expression).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Teapot.Expression= obj
 * @returns Teapot.Expression
 */
parameters(index: number, obj?:Teapot.Expression):Teapot.Expression|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Teapot.Expression).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
parametersLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
accessor():string|null
accessor(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
accessor(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startFieldAccessor(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset innerExpressionOffset
 */
static addInnerExpression(builder:flatbuffers.Builder, innerExpressionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, innerExpressionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset parametersOffset
 */
static addParameters(builder:flatbuffers.Builder, parametersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, parametersOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createParametersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startParametersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset accessorOffset
 */
static addAccessor(builder:flatbuffers.Builder, accessorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, accessorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endFieldAccessor(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createFieldAccessor(builder:flatbuffers.Builder, type:number, innerExpressionOffset:flatbuffers.Offset, parametersOffset:flatbuffers.Offset, accessorOffset:flatbuffers.Offset):flatbuffers.Offset {
  FieldAccessor.startFieldAccessor(builder);
  FieldAccessor.addType(builder, type);
  FieldAccessor.addInnerExpression(builder, innerExpressionOffset);
  FieldAccessor.addParameters(builder, parametersOffset);
  FieldAccessor.addAccessor(builder, accessorOffset);
  return FieldAccessor.endFieldAccessor(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class Expression {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Expression
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Expression {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Expression= obj
 * @returns Expression
 */
static getRootAsExpression(bb:flatbuffers.ByteBuffer, obj?:Expression):Expression {
  return (obj || new Expression).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param Teapot.Expression= obj
 * @returns Teapot.Expression|null
 */
innerExpression(obj?:Teapot.Expression):Teapot.Expression|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Teapot.Expression).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
operator():string|null
operator(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
operator(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param Teapot.Expression= obj
 * @returns Teapot.Expression|null
 */
left(obj?:Teapot.Expression):Teapot.Expression|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Teapot.Expression).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Teapot.Expression= obj
 * @returns Teapot.Expression|null
 */
right(obj?:Teapot.Expression):Teapot.Expression|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Teapot.Expression).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Teapot.FieldAccessor= obj
 * @returns Teapot.FieldAccessor
 */
fields(index: number, obj?:Teapot.FieldAccessor):Teapot.FieldAccessor|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Teapot.FieldAccessor).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
fieldsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Teapot.Any
 */
valueType():Teapot.Any {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : Teapot.Any.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
value<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startExpression(builder:flatbuffers.Builder) {
  builder.startObject(8);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset innerExpressionOffset
 */
static addInnerExpression(builder:flatbuffers.Builder, innerExpressionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, innerExpressionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset operatorOffset
 */
static addOperator(builder:flatbuffers.Builder, operatorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, operatorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset leftOffset
 */
static addLeft(builder:flatbuffers.Builder, leftOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, leftOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset rightOffset
 */
static addRight(builder:flatbuffers.Builder, rightOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, rightOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset fieldsOffset
 */
static addFields(builder:flatbuffers.Builder, fieldsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, fieldsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createFieldsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startFieldsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param Teapot.Any valueType
 */
static addValueType(builder:flatbuffers.Builder, valueType:Teapot.Any) {
  builder.addFieldInt8(6, valueType, Teapot.Any.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endExpression(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createExpression(builder:flatbuffers.Builder, type:number, innerExpressionOffset:flatbuffers.Offset, operatorOffset:flatbuffers.Offset, leftOffset:flatbuffers.Offset, rightOffset:flatbuffers.Offset, fieldsOffset:flatbuffers.Offset, valueType:Teapot.Any, valueOffset:flatbuffers.Offset):flatbuffers.Offset {
  Expression.startExpression(builder);
  Expression.addType(builder, type);
  Expression.addInnerExpression(builder, innerExpressionOffset);
  Expression.addOperator(builder, operatorOffset);
  Expression.addLeft(builder, leftOffset);
  Expression.addRight(builder, rightOffset);
  Expression.addFields(builder, fieldsOffset);
  Expression.addValueType(builder, valueType);
  Expression.addValue(builder, valueOffset);
  return Expression.endExpression(builder);
}
}
}
/**
 * @constructor
 */
export namespace Teapot{
export class TeapotTemplate {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns TeapotTemplate
 */
__init(i:number, bb:flatbuffers.ByteBuffer):TeapotTemplate {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param TeapotTemplate= obj
 * @returns TeapotTemplate
 */
static getRootAsTeapotTemplate(bb:flatbuffers.ByteBuffer, obj?:TeapotTemplate):TeapotTemplate {
  return (obj || new TeapotTemplate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
type():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param Teapot.Renderable= obj
 * @returns Teapot.Renderable|null
 */
root(obj?:Teapot.Renderable):Teapot.Renderable|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Teapot.Renderable).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startTeapotTemplate(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number type
 */
static addType(builder:flatbuffers.Builder, type:number) {
  builder.addFieldInt32(0, type, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset rootOffset
 */
static addRoot(builder:flatbuffers.Builder, rootOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, rootOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endTeapotTemplate(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishTeapotTemplateBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

static createTeapotTemplate(builder:flatbuffers.Builder, type:number, rootOffset:flatbuffers.Offset):flatbuffers.Offset {
  TeapotTemplate.startTeapotTemplate(builder);
  TeapotTemplate.addType(builder, type);
  TeapotTemplate.addRoot(builder, rootOffset);
  return TeapotTemplate.endTeapotTemplate(builder);
}
}
}
